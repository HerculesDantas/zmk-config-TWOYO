/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define L_SPACE   1
#define R_SPACE   2
#define CHAR_LAYER   3
#define RST_LAYER   4

&lt {
        flavor =  "hold-preferred";
};

/ {
        behaviors {
        td_e: accent_e {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENT_E";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp E>, <&kp RA(E)>;
        };

        td_c: accent_c {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENT_C";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C>, <&kp RA(COMMA)>;
        };

        td_o: accent_o {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENT_O";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp RA(O)>;
        };

        td_i: accent_i {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENT_I";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp RA(I)>;
        };

        td_u: accent_u {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENT_U";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp RA(U)>;
        };

        td_a: accent_a {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENT_A";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp RA(A)>;
        };

    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P    | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | ENTER |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  UP |  .    |
// | CTL | GUI | ALT  |     |   L+SPC   |   |    R+SPC   | LEFT| DOWN| RIGHT |
                        bindings = <
   &kp TAB  &kp Q &kp W &td_e &kp R &kp T     &kp Y &td_u  &td_i  &td_o  &kp P   &kp BSPC
   &kp ESC &td_a  &kp S &kp D &kp F &kp G        &kp H &kp J  &kp K     &kp L     &kp ENTER
   &kp LSHFT &kp Z &kp X &td_c &kp V &kp B        &kp N &kp M  &kp COMMA &kp DOT &kp RSHFT
   &kp LCTL &lt RST_LAYER LGUI &kp LALT &lt L_SPACE SPACE   &lt R_SPACE SPACE &mo CHAR_LAYER &trans &kp RCTL
                        >;
                };

                left_space_layer {
// -----------------------------------------------------------------------------------------
// |TILDE |  &  |  *  |  (  |  )  |     |   |      |        |       |   -   |  =  | DEL |
// |      |  $  |  %  |  ^  |     |     |   | HOME | PG_DWN | PG_UP |  END  |     |
// |      |  !  |  @  |  #  |     |     |   |      |  ";"   |  "("  |       | ")" |
// |      |     |     |     |           |   |               |       |       |     |
                        bindings = <
   &kp TILDE  &kp AMPS &kp STAR &kp LPAR &kp RPAR &trans     &trans &trans  &trans  &kp MINUS  &kp EQUAL  &kp DEL
   &trans &kp DOLLAR  &kp PERCENT &kp CARET &trans &trans        &kp HOME &kp PG_DN  &kp PG_UP  &kp END  &trans
   &trans &kp EXCL &kp AT &kp HASH &trans &trans        &trans &kp SEMICOLON  &kp LPAR &trans &kp RPAR
   &trans &trans &trans &trans   &trans &trans &trans &trans
                        >;
                };

                right_space_layer {
// -----------------------------------------------------------------------------------------
// |QUOTE |  7  |  8  |  9  |  0  |     |   |      |      |      |  -    |  =   | DEL |
// |      |  4  |  5  |  6  |     |     |   | LEFT | DOWN |  UP  | RIGHT |      |
// |      |  1  |  2  |  3  |     |     |   |      |      |L_BRC |       |R_BRC |
// |      |     |     |     |     |     |   |             |      |       |      |
                        bindings = <
   &kp SQT  &kp N7 &kp N8 &kp N9 &kp N0 &trans     &trans &trans  &trans  &kp MINUS  &kp EQUAL  &kp DEL
   &trans &kp N4  &kp N5 &kp N6 &trans &trans        &kp LEFT &kp DOWN  &kp UP  &kp RIGHT  &trans
   &trans &kp N1 &kp N2 &kp N3 &trans &trans        &trans &kp SEMICOLON  &kp LBKT &trans &kp RBKT
   &trans &trans &trans &trans   &trans &trans &trans &trans
                        >;
                };

                char_layer {
// -----------------------------------------------------------------------------------------
// |     |  /  |  ?  |     |     |      |   | BT0 | BT1 | BT2 |     |BTCLR| RESET |
// |  F1 |  F2 | F3  | F4  | F5  |  F6  |   | F7  |  F8 |  F9 | F10 | F11 |           
// | F12 |  \  |  |  |     |     |   +  |   |     |     |     |     |     |      
// |     |     |     |     |            |   |           |     |     |     |
                        bindings = <
   &trans  &kp FSLH &kp QUESTION &trans &trans &trans     &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &bootloader
   &kp F1 &kp F2  &kp F3 &kp F4 &kp F5 &kp F6        &kp F7 &kp F8  &kp F9  &kp F10  &kp F11
   &kp F12 &kp BSLH &kp PIPE &trans &trans &trans        &trans &trans  &trans &trans &trans
   &trans &trans &trans &trans   &trans &trans &trans &trans
                        >;
                };
        };

                reset_layer {
// -----------------------------------------------------------------------------------------
// |RESET|  /  |  ?  |     |     |      |   | BT0 | BT1 | BT2 |     |BTCLR| RESET |
// |  F1 |  F2 | F3  | F4  | F5  |  F6  |   | F7  |  F8 |  F9 | F10 | F11 |           
// | F12 |  \  |  |  |     |     |   +  |   |     |     |     |     |     |      
// |     |     |     |     |            |   |           |     |     |     |
                        bindings = <
   &bootloader  &kp FSLH &kp QUESTION &trans &trans &trans     &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &bootloader
   &kp F1 &kp F2  &kp F3 &kp F4 &kp F5 &kp F6        &kp F7 &kp F8  &kp F9  &kp F10  &kp F11
   &kp F12 &kp BSLH &kp PIPE &trans &trans &trans        &trans &trans  &trans &trans &trans
   &trans &trans &trans &trans   &trans &trans &trans &trans
                        >;
                };


};
